# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, FIRST
# This file is distributed under the same license as the FIRST Robotics
# Competition package.
# Soha Jin <soha@lohu.info>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2019\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-23 22:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:2
msgid "Using GRIP with a Kangaroo Computer"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:3
msgid ""
"A recently available computer called the Kangaroo looks like a great "
"platform for running GRIP on FRC robots. Some of the specs for this "
"processor include:"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:6
msgid "Quad core 1.4Ghz Atom processor"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:7
msgid "HDMI port"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:8
msgid "2 USB ports (1 USB2 and 1 USB3)"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:9
msgid "2GB RAM"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:10
msgid "32GB Flash"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:11
msgid "Flash card slot"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:12
msgid "WiFi"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:13
msgid "Battery with 4 hours running time"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:14
msgid "Power supply"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:15
msgid "Windows 10"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:16
msgid "and a fingerprint reader"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:18
msgid ""
"The advantage of this setup is that it offloads the roboRIO from doing "
"image processing and it is a normal Windows system so all of our software"
" should work without modification. Be sure to read the caveats at the end"
" of this page before jumping in."
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:21
msgid ""
"**More detailed instructions** for using a Kangaroo for running GRIP can "
"be found in the following PDF document created by Scott Taylor and FRC "
"1735. His explanation goes beyond what is shown here, detailing how to "
"get the GRIP program to auto-start on boot and many other details."
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:25
msgid "`Grip Plus Kangaroo <grip-plus-kangaroo.pdf>`_"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:28
msgid "Setup"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:31
msgid ""
"The nice thing about this setup is that you just need to plug in a "
"monitor, keyboard, mouse and (in this case) the Microsoft web camera and "
"you are good to go with programming the GRIP pipeline. When you are "
"finished, disconnect the keyboard, mouse and monitor and put the Kangaroo"
" on your robot. You will need to disable the WiFi on the Kangaroo and "
"connect it to the robot with a USB ethernet dongle to the extra ethernet "
"port on the robot radio."
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:36
msgid ""
"In this example you can see the Kangaroo computer (1) connected to a USB "
"hub (3), keyboard, and an HDMI monitor for programming. The USB hub is "
"connected to the camera and mouse."
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:40
msgid "Sample GRIP program"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:43
msgid ""
"Attached is the sample program running on the Kangaroo detecting the red "
"heart on the little foam robot in the image (left panel). It is doing a "
"HSV threshold to only get that red color then finding contours, and then "
"filtering the contours using the size and solidity. At the end of the "
"pipeline, the values are being published to NetworkTables."
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:48
msgid "Viewing Contours Report in NetworkTables"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:51
msgid ""
"This is the output from the OutlineViewer "
"(<username>/WPILib/tools/OutlineViewer.jar), running on a different "
"computer as a server (since there is no roboRIO on the network in this "
"example) and the values being reported back for the single contour that "
"the program detected that met the requirements of the Filter Contours "
"operation."
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:56
msgid "Considerations"
msgstr ""

#: ../../source/docs/software/vision-processing/grip/using-grip-with-a-kangaroo-computer.rst:57
msgid ""
"The Kangaroo runs Windows 10, so care must to be taken to make sure GRIP "
"will keep running on the robot during a match or testing. For example, it"
" should not try to do a Windows Update, Virus scan refresh, go to sleep, "
"ect. Once configured, it has the advantage of being a normal Intel "
"Architecture and should give predictable performance since it is running "
"only one application."
msgstr ""

