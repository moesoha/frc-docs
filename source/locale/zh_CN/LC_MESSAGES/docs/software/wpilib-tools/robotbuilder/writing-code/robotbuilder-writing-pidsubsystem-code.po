# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, FIRST
# This file is distributed under the same license as the FIRST Robotics
# Competition package.
# Soha Jin <soha@lohu.info>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2019\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-23 22:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:2
msgid "Writing the Code for a PIDSubsystem"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:4
msgid ""
"PIDSubsystems use feedback to control the actuator and drive it to a "
"particular position. In this example we use an elevator with a 10-turn "
"potentiometer connected to it to give feedback on the height. The "
"skeleton of the PIDSubsystem is generated by the RobotBuilder and we have"
" to fill in the rest of the code to provide the potentiometer value and "
"drive the motor with the output of the imbedded PIDController."
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:7
msgid "Setting the PID Constants"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:11
msgid ""
"Make sure the Elevator PID subsystem has been created in the RobotBuiler."
" In the case of our elevator we use a propertional constant of 6.0 and 0 "
"for the I and D terms. Once it's all set, generate Java/C++ code for the "
"project using the Export menu or the Java/C++ toolbar menu."
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:14
msgid "Add Constants for Elevator Preset Positions"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:76
msgid ""
"To make it easier to drive the elevator to preset positions, we added "
"preset positions for the bottom, stow, and table height. Then the "
"elevator is set to the STOW position by setting the PID setpoint and the "
"PID controller is enabled. This will cause the elevator to move to the "
"stowed position when the robot is enabled."
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:79
msgid "Adding the Constants to the Header File (C++ Only)"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:111
msgid "Return PID Input Values"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:131
msgid ""
"The ``returnPIDInput()`` method is used to set the value of the sensor "
"that is providing the feedback for the PID controller. In this case, the "
"code is automatically generated and returns the potentiometer raw analog "
"input value (a number that ranges from 0-1023). In our case we would like"
" the PID controller to be based on the average voltage read by the analog"
" input for the potentiometer, not the raw value."
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:133
msgid "If we just change the line:"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:135
msgid ""
"``return potentiometer.pidGet();`` for Java or ``return "
"potentiometer->PIDGet();`` for C++"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:137
msgid ""
"it will be overwritten by RobotBuilder next time we export to Java. You "
"can tell which lines are automatically generated by looking at the "
"\"//BEGIN AUTOGENERATED CODE\" and \"//END AUTOGENERATED CODE\" comments."
" Any code inbetween those markers will be overwritten next time "
"RobotBuilder is run. You're free to change anything outside of those "
"blocks."
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:140
msgid "Return the Average Voltage"
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:156
msgid ""
"To get around the problem from the last step, the comment blocks can be "
"removed. Then if the line is changed as shown, it will no longer be "
"overwritten by RobotBuilder."
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:158
msgid ""
"Remember, if we just wanted to add code to a method it could be added "
"safely outside of the comment blocks."
msgstr ""

#: ../../source/docs/software/wpilib-tools/robotbuilder/writing-code/robotbuilder-writing-pidsubsystem-code.rst:160
msgid "That's all that is required to create the Elevator PIDSubsystem."
msgstr ""

