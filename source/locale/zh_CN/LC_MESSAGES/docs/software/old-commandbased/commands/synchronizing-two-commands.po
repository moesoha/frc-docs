# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, FIRST
# This file is distributed under the same license as the FIRST Robotics
# Competition package.
# Soha Jin <soha@lohu.info>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2019\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-23 22:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:2
msgid "Synchronizing Two Commands"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:4
msgid ""
"This documentation describes the use of the legacy command-based library,"
" which has been deprecated. While this documentation has been preserved "
"to help teams that have yet to do so, teams are strongly encouraged to "
"migrate to the :ref:`new command-based library "
"<docs/software/commandbased/index:Command-Based Programming>`."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:6
msgid ""
"Commands can be nested inside of command groups to create more complex "
"commands. The simpler commands can be added to the command groups to "
"either run sequentially (each command finishing before the next starts) "
"or in parallel (the command is scheduled, and the next command is "
"immediately scheduled also). Occasionally there are times where you want "
"to make sure that two parallel command complete before moving onto the "
"next command. This article describes how to do that."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:9
msgid "CommandGroup with Sequential and Parallel Commands"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:53
msgid ""
"In this example some commands are added in parallel and others are added "
"sequentially to the CommandGroup CoopBridgeAutonomous (1). The first "
"command \"SetTipperState\" is added and completes before the "
"SetVirtualSetpoint command starts (2). Before SetVirtualSetpoint command "
"completes, the DriveToBridge command is immediately scheduled because of "
"the SetVirtualSetpoint is added in parallel (3). This example might give "
"you an idea of how commands are scheduled."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:56
msgid "Example Flowchart"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:60
msgid ""
"There is no dependency coming from the commands scheduled using \"Add "
"Parallel\" either or both of these commands could still be running when "
"the MoveBallToShooter command is reached."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:62
msgid ""
"Here is the code shown above represented as a flowchart.  Any command in "
"the main sequence (the sequence on the right here) that requires a "
"subsystem in use by a parallel command will cause the parallel command to"
" be canceled. For example, if the ``FireSequence`` required a subsystem "
"in use by ``SetVirtualSetpoint``, the ``SetVirtualSetpoint`` command will"
" be canceled when ``FireSequence`` is scheduled."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:65
msgid "Waiting for a Command"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:69
msgid ""
"If there are two commands that need to complete before the following "
"commands are scheduled, they can be put into a command group by "
"themselves, adding both in parallel. Then that command group can be "
"scheduled sequentially from an enclosing command group. When a command "
"group is scheduled sequentially, the commands inside it will all finish "
"before the next outer command is scheduled. In this way you can be sure "
"that an action consisting of multiple parallel commands has completed "
"before going on to the next command."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/synchronizing-two-commands.rst:71
msgid ""
"In this example you can see that the addition of a command group \"Move "
"to Bridge\" containing the **Set Virtual Setpoint** and **Drive to "
"Bridge** commands forces both to complete before the next commands are "
"scheduled."
msgstr ""

