# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, FIRST
# This file is distributed under the same license as the FIRST Robotics
# Competition package.
# Soha Jin <soha@lohu.info>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2019\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-23 22:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:2
msgid "Using Limit Switches to Control Behavior"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:4
msgid ""
"This documentation describes the use of the legacy command-based library,"
" which has been deprecated. While this documentation has been preserved "
"to help teams that have yet to do so, teams are strongly encouraged to "
"migrate to the :ref:`new command-based library "
"<docs/software/commandbased/index:Command-Based Programming>`."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:6
msgid ""
"Limit switches are often used to control mechanisms on robots. While "
"limit switches are simple to use, they only can sense a single position "
"of a moving part. This makes them ideal for ensuring that movement "
"doesn't exceed some limit but not so good at controlling the speed of the"
" movement as it approaches the limit. For example, a rotational shoulder "
"joint on a robot arm would best be controlled using a potentiometer or an"
" absolute encoder, the limit switch could make sure that if the "
"potentiometer ever failed, the limit switch would stop the robot from "
"going to far and causing damage."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:9
msgid "Values Provided"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:13
msgid ""
"Limit switches can have \"normally opened\" or \"normally closed\" "
"outputs. The usual way of wiring the switch is between a digital input "
"signal connection and ground. The digital input has pull-up resistors "
"that will make the input be high (1 value) when the switch is open, but "
"when the switch closes the value goes to 0 since the input is now "
"connected to ground. The switch shown here has both normally open and "
"normally closed outputs."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:16
msgid "Polling - Waiting for a Switch to Close"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:65
msgid ""
"You can write a very simple piece of code that just reads the limit "
"switch over and over again waiting until it detects that its value "
"transitions from 1 (opened) to 0 (closed). While this works, it's usually"
" impractical for the program to be able to just wait for the switch to "
"operate and not be doing anything else, like responding to joystick "
"input. This example shows the fundamental use of the switch, but while "
"the program is waiting, nothing else is happening."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:68
msgid "Operating until Limit Closed"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:133
msgid ""
"Commands call their ``execute()`` and ``isFinished()`` methods about 50 "
"times per second, or at a rate of every 20ms. A command that will operate"
" a motor until the limit switch is closed can read the digital input "
"value in the ``isFinished()`` method and return true when the switch "
"changes to the correct state. Then the command can stop the motor."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:135
msgid ""
"Remember, the mechanism (an Arm in this case) has some inertia and won't "
"stop immediately so it's important to make sure things don't break while "
"the arm is slowing."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:138
msgid "Counter to detect Switch Close"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:224
msgid ""
"It's possible that a limit switch might close then open again as a "
"mechanism moves past the switch. If the closure is fast enough the "
"program might not notice that the switch closed. An alternative method of"
" catching the switch closing is use a Counter object. Since counters are "
"implemented in hardware, it will be able to capture the closing of the "
"fastest switches and increment it's count. Then the program can simply "
"notice that the count has increased and take whatever steps are needed to"
" do the operation."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:226
msgid ""
"Above is a subsystem that uses a counter to watch the limit switch and "
"wait for the value to change. When it does, the counter will increment "
"and that can be watched in a command."
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:229
msgid "Using a Command with a Counter to detect Limit Switch Close"
msgstr ""

#: ../../source/docs/software/old-commandbased/commands/limit-switches-control-behavior.rst:296
msgid ""
"This command initializes the counter in the above subsystem then starts "
"the motor moving. It then tests the counter value in the isFinished() "
"method waiting for it to count the limit switch changing. When it does, "
"the arm is stopped. By using a hardware counter, a switch that might "
"close then open very quickly can still be caught by the program."
msgstr ""

